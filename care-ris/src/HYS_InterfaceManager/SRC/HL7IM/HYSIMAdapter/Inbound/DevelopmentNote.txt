2011-3-17
Add date id field to cs broker sql out interface default storage produrce.

2013-01-28
In former version, with request/response mode, 
when HL7_OUT cannot connect with 3rd party HL7 receiver and CSB_IN failed to get the response,
CSB_IN will not be able to notify Broker's SQLOutbound Interface.
This patch support updating the DataIndex table of SQLOutbound Interface with configurable error message,
so as to support retry time control by using customized trigger and storage procedure in Broker.

The following is an example of customized trigger and storage procedure:

CREATE TRIGGER [dbo].[SX_SQLOUT_UPDATE_RETRY_TIME]
   ON [dbo].[SX_SQLOUT_DATAINDEX] 
   AFTER UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

    DECLARE @dataId uniqueidentifier
    SELECT @dataId=Data_ID 
    FROM inserted
    WHERE RECORD_INDEX_1='EXCEPTION'
    
    DECLARE @retryTime nvarchar(max)
    SELECT @retryTime=RECORD_INDEX_3 
    FROM SX_SQLOUT_DATAINDEX 
    WHERE Data_ID=@dataId
    
    IF LEN(@retryTime)<=0 SET @retryTime=1
    ELSE SET @retryTime = CONVERT(INT,@retryTime)+1;
       
    UPDATE SX_SQLOUT_DATAINDEX 
    SET RECORD_INDEX_3=@retryTime 
    WHERE Data_ID=@dataId
	   
END


CREATE PROCEDURE [dbo].[sp_SX_SQLOUT_Order]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Query criteria translation.
	DECLARE @FX_63494984847512458820 nvarchar(MAX)
	SET @FX_63494984847512458820 = '10'
	DECLARE @FX_63494984847512458821 nvarchar(MAX)
	SET @FX_63494984847512458821 = '11'
	DECLARE @FX_63494984847512458822 nvarchar(MAX)
	SET @FX_63494984847512458822 = '12'
	DECLARE @FX_63494984847512458823 nvarchar(MAX)
	SET @FX_63494984847512458823 = '13'

	-- Insert statements for procedure here
	SELECT TOP 1000
	SX_SQLOUT_DATAINDEX.DATA_ID AS DATAINDEX_DATA_ID,
	SX_SQLOUT_DATAINDEX.DATA_SOURCE AS DATAINDEX_DATA_SOURCE,
	SX_SQLOUT_DATAINDEX.EVENT_TYPE AS DATAINDEX_EVENT_TYPE,
	SX_SQLOUT_DATAINDEX.RECORD_INDEX_1 AS DATAINDEX_RECORD_INDEX_1,
	SX_SQLOUT_DATAINDEX.RECORD_INDEX_2 AS DATAINDEX_RECORD_INDEX_2,
	SX_SQLOUT_DATAINDEX.RECORD_INDEX_3 AS DATAINDEX_RECORD_INDEX_3,
	SX_SQLOUT_DATAINDEX.RECORD_INDEX_4 AS DATAINDEX_RECORD_INDEX_4,
	SX_SQLOUT_PATIENT.ACCOUNT_NUMBER AS PATIENT_ACCOUNT_NUMBER,
	SX_SQLOUT_PATIENT.ADDRESS AS PATIENT_ADDRESS,
	SX_SQLOUT_PATIENT.BED_NUMBER AS PATIENT_BED_NUMBER,
	SX_SQLOUT_PATIENT.BIRTH_PLACE AS PATIENT_BIRTH_PLACE,
	SX_SQLOUT_PATIENT.BIRTHDATE AS PATIENT_BIRTHDATE,
	SX_SQLOUT_PATIENT.CITIZENSHIP AS PATIENT_CITIZENSHIP,
	SX_SQLOUT_PATIENT.COUNTRY_CODE AS PATIENT_COUNTRY_CODE,
	SX_SQLOUT_PATIENT.CUSTOMER_1 AS PATIENT_CUSTOMER_1,
	SX_SQLOUT_PATIENT.CUSTOMER_2 AS PATIENT_CUSTOMER_2,
	SX_SQLOUT_PATIENT.CUSTOMER_3 AS PATIENT_CUSTOMER_3,
	SX_SQLOUT_PATIENT.CUSTOMER_4 AS PATIENT_CUSTOMER_4,
	SX_SQLOUT_PATIENT.DRIVERLIC_NUMBER AS PATIENT_DRIVERLIC_NUMBER,
	SX_SQLOUT_PATIENT.ETHNIC_GROUP AS PATIENT_ETHNIC_GROUP,
	SX_SQLOUT_PATIENT.MARITAL_STATUS AS PATIENT_MARITAL_STATUS,
	SX_SQLOUT_PATIENT.MOTHER_MAIDEN_NAME AS PATIENT_MOTHER_MAIDEN_NAME,
	SX_SQLOUT_PATIENT.NATIONALITY AS PATIENT_NATIONALITY,
	SX_SQLOUT_PATIENT.OTHER_PID AS PATIENT_OTHER_PID,
	SX_SQLOUT_PATIENT.PATIENT_ALIAS AS PATIENT_PATIENT_ALIAS,
	SX_SQLOUT_PATIENT.PATIENT_LOCAL_NAME AS PATIENT_PATIENT_LOCAL_NAME,
	SX_SQLOUT_PATIENT.PATIENT_LOCATION AS PATIENT_PATIENT_LOCATION,
	SX_SQLOUT_PATIENT.PATIENT_NAME AS PATIENT_PATIENT_NAME,
	SX_SQLOUT_PATIENT.PATIENT_STATUS AS PATIENT_PATIENT_STATUS,
	SX_SQLOUT_PATIENT.PATIENT_TYPE AS PATIENT_PATIENT_TYPE,
	SX_SQLOUT_PATIENT.PATIENTID AS PATIENT_PATIENTID,
	SX_SQLOUT_PATIENT.PHONENUMBER_BUSINESS AS PATIENT_PHONENUMBER_BUSINESS,
	SX_SQLOUT_PATIENT.PHONENUMBER_HOME AS PATIENT_PHONENUMBER_HOME,
	SX_SQLOUT_PATIENT.PRIMARY_LANGUAGE AS PATIENT_PRIMARY_LANGUAGE,
	SX_SQLOUT_PATIENT.PRIOR_PATIENT_ID AS PATIENT_PRIOR_PATIENT_ID,
	SX_SQLOUT_PATIENT.PRIOR_PATIENT_NAME AS PATIENT_PRIOR_PATIENT_NAME,
	SX_SQLOUT_PATIENT.PRIOR_VISIT_NUMBER AS PATIENT_PRIOR_VISIT_NUMBER,
	SX_SQLOUT_PATIENT.RACE AS PATIENT_RACE,
	SX_SQLOUT_PATIENT.RELIGION AS PATIENT_RELIGION,
	SX_SQLOUT_PATIENT.SEX AS PATIENT_SEX,
	SX_SQLOUT_PATIENT.SSN_NUMBER AS PATIENT_SSN_NUMBER,
	SX_SQLOUT_PATIENT.VETERANS_MIL_STATUS AS PATIENT_VETERANS_MIL_STATUS,
	SX_SQLOUT_PATIENT.VISIT_NUMBER AS PATIENT_VISIT_NUMBER,
	SX_SQLOUT_ORDER.BODY_PART AS ORDER_BODY_PART,
	SX_SQLOUT_ORDER.CHARGE_AMOUNT AS ORDER_CHARGE_AMOUNT,
	SX_SQLOUT_ORDER.CHARGE_STATUS AS ORDER_CHARGE_STATUS,
	SX_SQLOUT_ORDER.CNT_AGENT AS ORDER_CNT_AGENT,
	SX_SQLOUT_ORDER.CUSTOMER_1 AS ORDER_CUSTOMER_1,
	SX_SQLOUT_ORDER.CUSTOMER_2 AS ORDER_CUSTOMER_2,
	SX_SQLOUT_ORDER.CUSTOMER_3 AS ORDER_CUSTOMER_3,
	SX_SQLOUT_ORDER.CUSTOMER_4 AS ORDER_CUSTOMER_4,
	SX_SQLOUT_ORDER.DURATION AS ORDER_DURATION,
	SX_SQLOUT_ORDER.EXAM_COMMENT AS ORDER_EXAM_COMMENT,
	SX_SQLOUT_ORDER.EXAM_DT AS ORDER_EXAM_DT,
	SX_SQLOUT_ORDER.EXAM_LOCATION AS ORDER_EXAM_LOCATION,
	SX_SQLOUT_ORDER.EXAM_REQUIREMENT AS ORDER_EXAM_REQUIREMENT,
	SX_SQLOUT_ORDER.EXAM_STATUS AS ORDER_EXAM_STATUS,
	SX_SQLOUT_ORDER.EXAM_VOLUME AS ORDER_EXAM_VOLUME,
	SX_SQLOUT_ORDER.FILLER AS ORDER_FILLER,
	SX_SQLOUT_ORDER.FILLER_CONTACT AS ORDER_FILLER_CONTACT,
	SX_SQLOUT_ORDER.FILLER_DEPARTMENT AS ORDER_FILLER_DEPARTMENT,
	SX_SQLOUT_ORDER.FILLER_NO AS ORDER_FILLER_NO,
	SX_SQLOUT_ORDER.MODALITY AS ORDER_MODALITY,
	SX_SQLOUT_ORDER.ORDER_NO AS ORDER_ORDER_NO,
	SX_SQLOUT_ORDER.PATIENT_ID AS ORDER_PATIENT_ID,
	SX_SQLOUT_ORDER.PLACER AS ORDER_PLACER,
	SX_SQLOUT_ORDER.PLACER_CONTACT AS ORDER_PLACER_CONTACT,
	SX_SQLOUT_ORDER.PLACER_DEPARTMENT AS ORDER_PLACER_DEPARTMENT,
	SX_SQLOUT_ORDER.PLACER_NO AS ORDER_PLACER_NO,
	SX_SQLOUT_ORDER.PROCEDURE_CODE AS ORDER_PROCEDURE_CODE,
	SX_SQLOUT_ORDER.PROCEDURE_DESC AS ORDER_PROCEDURE_DESC,
	SX_SQLOUT_ORDER.PROCEDURE_NAME AS ORDER_PROCEDURE_NAME,
	SX_SQLOUT_ORDER.REF_CLASS_UID AS ORDER_REF_CLASS_UID,
	SX_SQLOUT_ORDER.REF_CONTACT AS ORDER_REF_CONTACT,
	SX_SQLOUT_ORDER.REF_ORGANIZATION AS ORDER_REF_ORGANIZATION,
	SX_SQLOUT_ORDER.REF_PHYSICIAN AS ORDER_REF_PHYSICIAN,
	SX_SQLOUT_ORDER.REQUEST_REASON AS ORDER_REQUEST_REASON,
	SX_SQLOUT_ORDER.REUQEST_COMMENTS AS ORDER_REUQEST_COMMENTS,
	SX_SQLOUT_ORDER.SCHEDULED_DT AS ORDER_SCHEDULED_DT,
	SX_SQLOUT_ORDER.SERIES_NO AS ORDER_SERIES_NO,
	SX_SQLOUT_ORDER.STATION_AETITLE AS ORDER_STATION_AETITLE,
	SX_SQLOUT_ORDER.STATION_NAME AS ORDER_STATION_NAME,
	SX_SQLOUT_ORDER.STUDY_ID AS ORDER_STUDY_ID,
	SX_SQLOUT_ORDER.STUDY_INSTANCE_UID AS ORDER_STUDY_INSTANCE_UID,
	SX_SQLOUT_ORDER.TECHNICIAN AS ORDER_TECHNICIAN,
	SX_SQLOUT_ORDER.TRANSPORT_ARRANGE AS ORDER_TRANSPORT_ARRANGE
	FROM
	SX_SQLOUT_DATAINDEX JOIN SX_SQLOUT_PATIENT ON(SX_SQLOUT_DATAINDEX.Data_ID = SX_SQLOUT_PATIENT.Data_ID) JOIN SX_SQLOUT_ORDER ON(SX_SQLOUT_DATAINDEX.Data_ID = SX_SQLOUT_ORDER.Data_ID)
	WHERE
	(SX_SQLOUT_DATAINDEX.EVENT_TYPE = @FX_63494984847512458820
	OR SX_SQLOUT_DATAINDEX.EVENT_TYPE = @FX_63494984847512458821
	OR SX_SQLOUT_DATAINDEX.EVENT_TYPE = @FX_63494984847512458822
	OR SX_SQLOUT_DATAINDEX.EVENT_TYPE = @FX_63494984847512458823
	) AND (SX_SQLOUT_DATAINDEX.PROCESS_FLAG <> '1' OR SX_SQLOUT_DATAINDEX.PROCESS_FLAG IS NULL)
                
               AND (LEN(RECORD_INDEX_3)<1 OR CONVERT(INT,RECORD_INDEX_3)<=10)

	ORDER BY SX_SQLOUT_DATAINDEX.DATA_DT
END
go
