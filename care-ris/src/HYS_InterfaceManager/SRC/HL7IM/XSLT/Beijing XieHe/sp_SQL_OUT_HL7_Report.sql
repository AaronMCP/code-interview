USE [GWDataDB]
GO

/****** Object:  StoredProcedure [dbo].[sp_SQL_OUT_HL7_Report]    Script Date: 10/12/2011 15:52:59 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author: GC Gateway 2.0 Rule Engine
-- Create date: 2011/10/11 10:40
-- Description: Data outbound storage procedure for interface 'SQL_OUT_HL7', rule ''
-- =============================================
CREATE PROCEDURE [dbo].[sp_SQL_OUT_HL7_Report]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Query criteria translation.
	DECLARE @FX_63453926449775390713 nvarchar(MAX)
	SET @FX_63453926449775390713 = '30'
	DECLARE @FX_63453926449775390714 nvarchar(MAX)
	SET @FX_63453926449775390714 = '31'
	DECLARE @FX_63453926449775390715 nvarchar(MAX)
	SET @FX_63453926449775390715 = '32'
	DECLARE @FX_63453926449775390716 nvarchar(MAX)
	SET @FX_63453926449775390716 = '33'

	-- Insert statements for procedure here
	SELECT TOP 1000
	SQL_OUT_HL7_DATAINDEX.DATA_ID AS DATAINDEX_DATA_ID,
	SQL_OUT_HL7_DATAINDEX.DATA_SOURCE AS DATAINDEX_DATA_SOURCE,
	SQL_OUT_HL7_DATAINDEX.EVENT_TYPE AS DATAINDEX_EVENT_TYPE,
	SQL_OUT_HL7_DATAINDEX.RECORD_INDEX_1 AS DATAINDEX_RECORD_INDEX_1,
	SQL_OUT_HL7_DATAINDEX.RECORD_INDEX_2 AS DATAINDEX_RECORD_INDEX_2,
	SQL_OUT_HL7_DATAINDEX.RECORD_INDEX_3 AS DATAINDEX_RECORD_INDEX_3,
	SQL_OUT_HL7_DATAINDEX.RECORD_INDEX_4 AS DATAINDEX_RECORD_INDEX_4,
	SQL_OUT_HL7_PATIENT.ACCOUNT_NUMBER AS PATIENT_ACCOUNT_NUMBER,
	SQL_OUT_HL7_PATIENT.ADDRESS AS PATIENT_ADDRESS,
	SQL_OUT_HL7_PATIENT.BED_NUMBER AS PATIENT_BED_NUMBER,
	SQL_OUT_HL7_PATIENT.BIRTH_PLACE AS PATIENT_BIRTH_PLACE,
	ltrim(rtrim(STR(datepart(YEAR,	SQL_OUT_HL7_PATIENT.BIRTHDATE))))
	+(CASE WHEN datepart(MONTH,	SQL_OUT_HL7_PATIENT.BIRTHDATE) < 10 THEN '0'ELSE '' END + ltrim(rtrim(str(datepart(MONTH,SQL_OUT_HL7_PATIENT.BIRTHDATE)))))
	+(CASE WHEN datepart(DAY,SQL_OUT_HL7_PATIENT.BIRTHDATE) < 10 THEN '0'ELSE '' END + ltrim(rtrim(str(datepart(DAY,SQL_OUT_HL7_PATIENT.BIRTHDATE)))))
	AS PATIENT_BIRTHDATE,
	SQL_OUT_HL7_PATIENT.CITIZENSHIP AS PATIENT_CITIZENSHIP,
	SQL_OUT_HL7_PATIENT.COUNTRY_CODE AS PATIENT_COUNTRY_CODE,
	SQL_OUT_HL7_PATIENT.CUSTOMER_1 AS PATIENT_CUSTOMER_1,
	SQL_OUT_HL7_PATIENT.CUSTOMER_2 AS PATIENT_CUSTOMER_2,
	SQL_OUT_HL7_PATIENT.CUSTOMER_3 AS PATIENT_CUSTOMER_3,
	SQL_OUT_HL7_PATIENT.CUSTOMER_4 AS PATIENT_CUSTOMER_4,
	SQL_OUT_HL7_PATIENT.DRIVERLIC_NUMBER AS PATIENT_DRIVERLIC_NUMBER,
	SQL_OUT_HL7_PATIENT.ETHNIC_GROUP AS PATIENT_ETHNIC_GROUP,
	SQL_OUT_HL7_PATIENT.MARITAL_STATUS AS PATIENT_MARITAL_STATUS,
	SQL_OUT_HL7_PATIENT.MOTHER_MAIDEN_NAME AS PATIENT_MOTHER_MAIDEN_NAME,
	SQL_OUT_HL7_PATIENT.NATIONALITY AS PATIENT_NATIONALITY,
	SQL_OUT_HL7_PATIENT.OTHER_PID AS PATIENT_OTHER_PID,
	SQL_OUT_HL7_PATIENT.PATIENT_ALIAS AS PATIENT_PATIENT_ALIAS,
	SQL_OUT_HL7_PATIENT.PATIENT_LOCAL_NAME AS PATIENT_PATIENT_LOCAL_NAME,
	SQL_OUT_HL7_PATIENT.PATIENT_LOCATION AS PATIENT_PATIENT_LOCATION,
	SQL_OUT_HL7_PATIENT.PATIENT_NAME AS PATIENT_PATIENT_NAME,
	SQL_OUT_HL7_PATIENT.PATIENT_STATUS AS PATIENT_PATIENT_STATUS,
	SQL_OUT_HL7_PATIENT.PATIENT_TYPE AS PATIENT_PATIENT_TYPE,
	SQL_OUT_HL7_PATIENT.PATIENTID AS PATIENT_PATIENTID,
	SQL_OUT_HL7_PATIENT.PHONENUMBER_BUSINESS AS PATIENT_PHONENUMBER_BUSINESS,
	SQL_OUT_HL7_PATIENT.PHONENUMBER_HOME AS PATIENT_PHONENUMBER_HOME,
	SQL_OUT_HL7_PATIENT.PRIMARY_LANGUAGE AS PATIENT_PRIMARY_LANGUAGE,
	SQL_OUT_HL7_PATIENT.PRIOR_PATIENT_ID AS PATIENT_PRIOR_PATIENT_ID,
	SQL_OUT_HL7_PATIENT.PRIOR_PATIENT_NAME AS PATIENT_PRIOR_PATIENT_NAME,
	SQL_OUT_HL7_PATIENT.PRIOR_VISIT_NUMBER AS PATIENT_PRIOR_VISIT_NUMBER,
	SQL_OUT_HL7_PATIENT.RACE AS PATIENT_RACE,
	SQL_OUT_HL7_PATIENT.RELIGION AS PATIENT_RELIGION,
	SQL_OUT_HL7_PATIENT.SEX AS PATIENT_SEX,
	SQL_OUT_HL7_PATIENT.SSN_NUMBER AS PATIENT_SSN_NUMBER,
	SQL_OUT_HL7_PATIENT.VETERANS_MIL_STATUS AS PATIENT_VETERANS_MIL_STATUS,
	SQL_OUT_HL7_PATIENT.VISIT_NUMBER AS PATIENT_VISIT_NUMBER,
	SQL_OUT_HL7_ORDER.BODY_PART AS ORDER_BODY_PART,
	SQL_OUT_HL7_ORDER.CHARGE_AMOUNT AS ORDER_CHARGE_AMOUNT,
	SQL_OUT_HL7_ORDER.CHARGE_STATUS AS ORDER_CHARGE_STATUS,
	SQL_OUT_HL7_ORDER.CNT_AGENT AS ORDER_CNT_AGENT,
	SQL_OUT_HL7_ORDER.CUSTOMER_1 AS ORDER_CUSTOMER_1,
	SQL_OUT_HL7_ORDER.CUSTOMER_2 AS ORDER_CUSTOMER_2,
	SQL_OUT_HL7_ORDER.CUSTOMER_3 AS ORDER_CUSTOMER_3,
	SQL_OUT_HL7_ORDER.CUSTOMER_4 AS ORDER_CUSTOMER_4,
	SQL_OUT_HL7_ORDER.DURATION AS ORDER_DURATION,
	SQL_OUT_HL7_ORDER.EXAM_COMMENT AS ORDER_EXAM_COMMENT,
	SQL_OUT_HL7_ORDER.EXAM_DT AS ORDER_EXAM_DT,
	SQL_OUT_HL7_ORDER.EXAM_LOCATION AS ORDER_EXAM_LOCATION,
	SQL_OUT_HL7_ORDER.EXAM_REQUIREMENT AS ORDER_EXAM_REQUIREMENT,
	SQL_OUT_HL7_ORDER.EXAM_STATUS AS ORDER_EXAM_STATUS,
	SQL_OUT_HL7_ORDER.EXAM_VOLUME AS ORDER_EXAM_VOLUME,
	SQL_OUT_HL7_ORDER.FILLER AS ORDER_FILLER,
	SQL_OUT_HL7_ORDER.FILLER_CONTACT AS ORDER_FILLER_CONTACT,
	SQL_OUT_HL7_ORDER.FILLER_DEPARTMENT AS ORDER_FILLER_DEPARTMENT,
	SQL_OUT_HL7_ORDER.FILLER_NO AS ORDER_FILLER_NO,
	SQL_OUT_HL7_ORDER.MODALITY AS ORDER_MODALITY,
	SQL_OUT_HL7_ORDER.ORDER_NO AS ORDER_ORDER_NO,
	SQL_OUT_HL7_ORDER.PATIENT_ID AS ORDER_PATIENT_ID,
	SQL_OUT_HL7_ORDER.PLACER AS ORDER_PLACER,
	SQL_OUT_HL7_ORDER.PLACER_CONTACT AS ORDER_PLACER_CONTACT,
	SQL_OUT_HL7_ORDER.PLACER_DEPARTMENT AS ORDER_PLACER_DEPARTMENT,
	SQL_OUT_HL7_ORDER.PLACER_NO AS ORDER_PLACER_NO,
	SQL_OUT_HL7_ORDER.PROCEDURE_CODE AS ORDER_PROCEDURE_CODE,
	SQL_OUT_HL7_ORDER.PROCEDURE_DESC AS ORDER_PROCEDURE_DESC,
	SQL_OUT_HL7_ORDER.PROCEDURE_NAME AS ORDER_PROCEDURE_NAME,
	SQL_OUT_HL7_ORDER.REF_CLASS_UID AS ORDER_REF_CLASS_UID,
	SQL_OUT_HL7_ORDER.REF_CONTACT AS ORDER_REF_CONTACT,
	SQL_OUT_HL7_ORDER.REF_ORGANIZATION AS ORDER_REF_ORGANIZATION,
	SQL_OUT_HL7_ORDER.REF_PHYSICIAN AS ORDER_REF_PHYSICIAN,
	SQL_OUT_HL7_ORDER.REQUEST_REASON AS ORDER_REQUEST_REASON,
	SQL_OUT_HL7_ORDER.REUQEST_COMMENTS AS ORDER_REUQEST_COMMENTS,
	SQL_OUT_HL7_ORDER.SCHEDULED_DT AS ORDER_SCHEDULED_DT,
	SQL_OUT_HL7_ORDER.SERIES_NO AS ORDER_SERIES_NO,
	SQL_OUT_HL7_ORDER.STATION_AETITLE AS ORDER_STATION_AETITLE,
	SQL_OUT_HL7_ORDER.STATION_NAME AS ORDER_STATION_NAME,
	SQL_OUT_HL7_ORDER.STUDY_ID AS ORDER_STUDY_ID,
	SQL_OUT_HL7_ORDER.STUDY_INSTANCE_UID AS ORDER_STUDY_INSTANCE_UID,
	SQL_OUT_HL7_ORDER.TECHNICIAN AS ORDER_TECHNICIAN,
	SQL_OUT_HL7_ORDER.TRANSPORT_ARRANGE AS ORDER_TRANSPORT_ARRANGE,
	SQL_OUT_HL7_REPORT.ACCESSION_NUMBER AS REPORT_ACCESSION_NUMBER,
	SQL_OUT_HL7_REPORT.COMMENTS AS REPORT_COMMENTS,
	SQL_OUT_HL7_REPORT.CUSTOMER_1 AS REPORT_CUSTOMER_1,
	SQL_OUT_HL7_REPORT.CUSTOMER_2 AS REPORT_CUSTOMER_2,
	SQL_OUT_HL7_REPORT.CUSTOMER_3 AS REPORT_CUSTOMER_3,
	SQL_OUT_HL7_REPORT.CUSTOMER_4 AS REPORT_CUSTOMER_4,
	SQL_OUT_HL7_REPORT.DIAGNOSE AS REPORT_DIAGNOSE,
	SQL_OUT_HL7_REPORT.MODALITY AS REPORT_MODALITY,
	SQL_OUT_HL7_REPORT.OBSERVATIONMETHOD AS REPORT_OBSERVATIONMETHOD,
	SQL_OUT_HL7_REPORT.PATIENT_ID AS REPORT_PATIENT_ID,
	SQL_OUT_HL7_REPORT.REPORT_APPROVER AS REPORT_REPORT_APPROVER,
	SQL_OUT_HL7_REPORT.REPORT_FILE AS REPORT_REPORT_FILE,
	SQL_OUT_HL7_REPORT.REPORT_INTEPRETER AS REPORT_REPORT_INTEPRETER,
	SQL_OUT_HL7_REPORT.REPORT_NO AS REPORT_REPORT_NO,
	SQL_OUT_HL7_REPORT.REPORT_STATUS AS REPORT_REPORT_STATUS,
	SQL_OUT_HL7_REPORT.REPORT_TYPE AS REPORT_REPORT_TYPE,
	SQL_OUT_HL7_REPORT.REPORT_WRITER AS REPORT_REPORT_WRITER,
	ltrim(rtrim(STR(datepart(YEAR,SQL_OUT_HL7_REPORT.REPORTDT))))
	+(CASE WHEN datepart(MONTH,SQL_OUT_HL7_REPORT.REPORTDT) < 10 THEN '0'ELSE '' END + ltrim(rtrim(str(datepart(MONTH,SQL_OUT_HL7_REPORT.REPORTDT)))))
	+(CASE WHEN datepart(DAY,SQL_OUT_HL7_REPORT.REPORTDT) < 10 THEN '0'ELSE '' END + ltrim(rtrim(str(datepart(DAY,SQL_OUT_HL7_REPORT.REPORTDT)))))
	+(CASE WHEN datepart(HOUR,SQL_OUT_HL7_REPORT.REPORTDT) < 10 THEN '0'ELSE '' END + ltrim(rtrim(str(datepart(HOUR,SQL_OUT_HL7_REPORT.REPORTDT)))))
	+(CASE WHEN datepart(MI,SQL_OUT_HL7_REPORT.REPORTDT) < 10 THEN '0'ELSE '' END + ltrim(rtrim(str(datepart(MI,SQL_OUT_HL7_REPORT.REPORTDT)))))
	+(CASE WHEN datepart(Second,SQL_OUT_HL7_REPORT.REPORTDT) < 10 THEN '0'ELSE '' END + ltrim(rtrim(str(datepart(Second,SQL_OUT_HL7_REPORT.REPORTDT)))))
	AS REPORT_REPORTDT
	FROM
	SQL_OUT_HL7_DATAINDEX JOIN SQL_OUT_HL7_PATIENT ON(SQL_OUT_HL7_DATAINDEX.Data_ID = SQL_OUT_HL7_PATIENT.Data_ID) JOIN SQL_OUT_HL7_ORDER ON(SQL_OUT_HL7_DATAINDEX.Data_ID = SQL_OUT_HL7_ORDER.Data_ID) JOIN SQL_OUT_HL7_REPORT ON(SQL_OUT_HL7_DATAINDEX.Data_ID = SQL_OUT_HL7_REPORT.Data_ID)
	WHERE
	(SQL_OUT_HL7_DATAINDEX.EVENT_TYPE = @FX_63453926449775390713
	OR SQL_OUT_HL7_DATAINDEX.EVENT_TYPE = @FX_63453926449775390714
	OR SQL_OUT_HL7_DATAINDEX.EVENT_TYPE = @FX_63453926449775390715
	OR SQL_OUT_HL7_DATAINDEX.EVENT_TYPE = @FX_63453926449775390716
	) AND (SQL_OUT_HL7_DATAINDEX.PROCESS_FLAG <> '1' OR SQL_OUT_HL7_DATAINDEX.PROCESS_FLAG IS NULL)
	ORDER BY SQL_OUT_HL7_DATAINDEX.DATA_DT
END

GO

